/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.form;

import com.Dao.nhanVienDao;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import com.model.NhanVien;
import com.untils.XAuth;
import com.untils.XDialog;
import com.untils.XImage;
import com.untils.XValidate;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Base64;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.imageio.ImageIO;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class QuanLyNhanVien1 extends javax.swing.JPanel {

    JFileChooser fileChooser = new JFileChooser();
    nhanVienDao nvDao = new nhanVienDao();
    int row = -1;
    static Cipher cipher;
    String inputMaNV = "";
    String maHoa = "";
    boolean kt = false;
    String ma = "";
    String maNV = "";

    /**
     * Creates new form QuanLyNhanVien1
     */
    public QuanLyNhanVien1() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngGioiTinh = new javax.swing.ButtonGroup();
        popcraeteQR = new javax.swing.JPopupMenu();
        mnucreateQR = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblHinh = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        cboVaiTro = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtFindTen = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnFind = new javax.swing.JButton();
        cboFindTrangThai = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        cboFindVaiTro = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cboTrangThai = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        txtPass = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        jdcNgayVaoLam = new com.toedter.calendar.JDateChooser();
        btnSua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnThem = new javax.swing.JButton();
        ErrorTenNV = new javax.swing.JLabel();
        ErrorMaNV1 = new javax.swing.JLabel();
        ErrorVaiTro = new javax.swing.JLabel();
        ErrorTrangThai = new javax.swing.JLabel();
        ErrorMatKhau = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtRePass = new javax.swing.JPasswordField();
        ErrorReMatKhau = new javax.swing.JLabel();
        ErrorSoDT = new javax.swing.JLabel();
        ErrorGioiTinh = new javax.swing.JLabel();
        ErrorNgayVaoLam = new javax.swing.JLabel();

        mnucreateQR.setText("jMenuItem1");
        mnucreateQR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnucreateQRActionPerformed(evt);
            }
        });
        popcraeteQR.add(mnucreateQR);

        setBackground(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(244, 154, 157));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        lblHinh.setBackground(new java.awt.Color(255, 255, 255));
        lblHinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblHinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblHinh, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Mã nhân viên");

        txtMaNV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Tên nhân viên");

        txtTenNV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTenNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenNVActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Số điện thoại");

        txtSDT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cboVaiTro.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboVaiTro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------------------", "Quản Lý", "Thu Ngân", "Nhân Viên" }));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Vai trò");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Ngày vào làm");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Ghi chú");

        jPanel3.setBackground(new java.awt.Color(244, 154, 157));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Tên nhân viên");

        btnFind.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnFind.setText("Tìm");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        cboFindTrangThai.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboFindTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả", "Đang Làm", "Đã Nghỉ" }));
        cboFindTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFindTrangThaiActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Trạng thái");

        tblNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã NV", "Tên NV", "Vai trò"
            }
        ));
        tblNhanVien.setSelectionBackground(new java.awt.Color(244, 100, 104));
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblNhanVienMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblNhanVien);

        cboFindVaiTro.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboFindVaiTro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả", "Quản Lý", "Thu Ngân", "Nhân Viên" }));
        cboFindVaiTro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFindVaiTroActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Vai trò");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(14, 14, 14))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtFindTen, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFind, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(cboFindTrangThai, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cboFindVaiTro, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFindTen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboFindVaiTro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboFindTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Trạng thái");

        cboTrangThai.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------------------", "Đang làm", "Nghỉ Làm" }));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Giới tính");

        btngGioiTinh.add(rdoNam);
        rdoNam.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        rdoNam.setText("Nam");

        btngGioiTinh.add(rdoNu);
        rdoNu.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        rdoNu.setText("Nữ");

        txtPass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Mật khẩu");

        jdcNgayVaoLam.setDateFormatString("dd/MM/yyyy");
        jdcNgayVaoLam.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnSua.setBackground(new java.awt.Color(175, 41, 120));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icon/icons8-update-25.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnMoi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icon/icons8-reset-25.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        txtGhiChu.setColumns(20);
        txtGhiChu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        btnThem.setBackground(new java.awt.Color(175, 42, 46));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icon/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        ErrorTenNV.setForeground(new java.awt.Color(153, 0, 51));
        ErrorTenNV.setText("*");

        ErrorMaNV1.setForeground(new java.awt.Color(153, 0, 51));
        ErrorMaNV1.setText("*");

        ErrorVaiTro.setForeground(new java.awt.Color(153, 0, 51));
        ErrorVaiTro.setText("*");

        ErrorTrangThai.setForeground(new java.awt.Color(153, 0, 51));
        ErrorTrangThai.setText("*");

        ErrorMatKhau.setForeground(new java.awt.Color(153, 0, 51));
        ErrorMatKhau.setText("*");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Nhập lại mật khẩu");

        txtRePass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        ErrorReMatKhau.setForeground(new java.awt.Color(153, 0, 51));
        ErrorReMatKhau.setText("*");

        ErrorSoDT.setForeground(new java.awt.Color(153, 0, 51));
        ErrorSoDT.setText("*");

        ErrorGioiTinh.setForeground(new java.awt.Color(153, 0, 51));
        ErrorGioiTinh.setText("*");

        ErrorNgayVaoLam.setForeground(new java.awt.Color(153, 0, 51));
        ErrorNgayVaoLam.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSDT)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ErrorSoDT, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(27, 27, 27)
                                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(59, 59, 59)
                                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(57, 57, 57)
                                                .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ErrorNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(ErrorGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(rdoNam)
                                                .addGap(30, 30, 30)
                                                .addComponent(rdoNu)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ErrorMaNV1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ErrorTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ErrorMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addComponent(jLabel4)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(ErrorVaiTro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(cboVaiTro, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                            .addComponent(jLabel9)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(ErrorTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                            .addGap(6, 6, 6)
                                                            .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGap(0, 0, Short.MAX_VALUE))
                                                .addComponent(txtPass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jdcNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ErrorReMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtRePass))))
                        .addGap(29, 29, 29)))
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(ErrorMaNV1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2))
                                    .addComponent(ErrorTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel9)
                                    .addComponent(ErrorVaiTro, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ErrorTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboVaiTro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(ErrorMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ErrorGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdoNam)
                                .addComponent(rdoNu))
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(ErrorNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdcNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(ErrorReMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRePass, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ErrorSoDT, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel6)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        this.row = tblNhanVien.getSelectedRow();
        this.edit();
        String maNVClick = (String) tblNhanVien.getValueAt(row, 0);
        maNV = maNVClick;
        getMaNV(maNVClick);
        // TODO add your handling code here:
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        insert();
//        createQR();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        update();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        clearForm();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMoiActionPerformed

    private void lblHinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhMouseClicked
        chonHinh();
        // TODO add your handling code here:
    }//GEN-LAST:event_lblHinhMouseClicked

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        if (!txtFindTen.getText().isEmpty()) {
            String key = txtFindTen.getText();
            search(key);
        } else {
            XDialog.alert(null, "Vui lòng nhập tên hoặc số điện thoại cần tìm!");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnFindActionPerformed

    private void cboFindVaiTroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFindVaiTroActionPerformed
        Loc();
        System.out.println("haha");
        // TODO add your handling code here:
    }//GEN-LAST:event_cboFindVaiTroActionPerformed

    private void cboFindTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFindTrangThaiActionPerformed
        Loc();
        System.out.println("hoho");
        // TODO add your handling code here:
    }//GEN-LAST:event_cboFindTrangThaiActionPerformed

    private void tblNhanVienMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMousePressed

    }//GEN-LAST:event_tblNhanVienMousePressed

    private void tblNhanVienMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseReleased
//        if (evt.isPopupTrigger()) {
//            popcraeteQR.show(evt.getComponent(), evt.getX(), evt.getY());
//        }
    }//GEN-LAST:event_tblNhanVienMouseReleased

    private void mnucreateQRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnucreateQRActionPerformed
        List<NhanVien> listNV = nvDao.selectAll();
        for (NhanVien nhanVien : listNV) {
            if (nhanVien.getMaHoa() != null && nhanVien.getMaNV().equals(txtMaNV.getText())) {
                try {
                    ma = txtMaNV.getText();
                    layma();
                    createQR();
                    return;
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else if (nhanVien.getMaHoa() == null && nhanVien.getMaNV().equals(txtMaNV.getText())) {
                try {
                    ma = txtMaNV.getText();
                    getMaNV(ma);
//                    getMaNV2(txtMaNV.getText());
                    maHoaMaNV();
                    createQR();
                    updateMaHoa(maHoa, txtMaNV.getText());
                    return;
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_mnucreateQRActionPerformed

    private void txtTenNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenNVActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ErrorGioiTinh;
    private javax.swing.JLabel ErrorMaNV1;
    private javax.swing.JLabel ErrorMatKhau;
    private javax.swing.JLabel ErrorNgayVaoLam;
    private javax.swing.JLabel ErrorReMatKhau;
    private javax.swing.JLabel ErrorSoDT;
    private javax.swing.JLabel ErrorTenNV;
    private javax.swing.JLabel ErrorTrangThai;
    private javax.swing.JLabel ErrorVaiTro;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup btngGioiTinh;
    private javax.swing.JComboBox<String> cboFindTrangThai;
    private javax.swing.JComboBox<String> cboFindVaiTro;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JComboBox<String> cboVaiTro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser jdcNgayVaoLam;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JMenuItem mnucreateQR;
    private javax.swing.JPopupMenu popcraeteQR;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtFindTen;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtRePass;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNV;
    // End of variables declaration//GEN-END:variables
public void init() {
        fillTable();
        updateStatus();
        mnucreateQR.setText("Tạo mã QR");
        URL url = QuanLyNhanVien1.class.getResource("/com/icon/iconQR.png");
        mnucreateQR.setIcon(new ImageIcon(url));
    }

    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);
        try {
            List<NhanVien> list = nvDao.selectAll();
            for (NhanVien nv1 : list) {
                Object[] row = {
                    nv1.getMaNV(),
                    //   XAuth.user.isChuVu() ? nv.getMatKhau() : hidePass(nv.getMatKhau()),                  
                    nv1.getTenNV(),
                    nv1.getChuVu(),
                    hidePass(nv1.getMatKhau())};

                model.addRow(row);
            }
        } catch (Exception e) {
            XDialog.alert(this, "Lỗi truy vấn dữ liệu nhân viên!");
            e.printStackTrace();
        }
    }

    public void hienThiHinh(String image) {
        ImageIcon image1 = new ImageIcon("icon\\" + image);
        Image img = image1.getImage();
        ImageIcon icon = new ImageIcon(img.getScaledInstance(lblHinh.getWidth(), lblHinh.getHeight(), 0));
        lblHinh.setText("");
        lblHinh.setIcon(icon);
    }

    public void chonHinh() {
        try {
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                XImage.save(file);
                Image image = ImageIO.read(file);
                lblHinh.setIcon(new ImageIcon(image.getScaledInstance(lblHinh.getWidth(), lblHinh.getHeight(), 0)));
                lblHinh.setToolTipText(file.getName());
            }
        } catch (Exception e) {
            System.out.println("Error" + e.toString());
        }
        // TODO add your handling code here:
    }

    private void insert() {
        if (validateForm()) {
            return;
        }
        boolean CheckMaNV = XValidate.checkTrungNV(txtMaNV);
        if (CheckMaNV == false) {
            ErrorMaNV1.setText("Mã nhân viên đã tồn tại!");
            return;
        } else {
            ErrorMaNV1.setText("");
        }
        NhanVien nv = this.getForm();
        try {
            nvDao.insert(nv); // thêm mới
            fillTable(); // đỗ lại bảng
            clearForm(); // xóa trắng form
//            createQR();
   XDialog.alert(this, "Thêm nhân viên mới thành công!");
        } catch (Exception e) {
            XDialog.alert(this, "Thêm nhân viên mới thất bại!");
            e.printStackTrace();
        }

    }

    private void update() {
        if (validateForm()) {
            return;
        }
        NhanVien nv = this.getForm();

        try {
            nvDao.update(nv); // cập nhật
            this.fillTable(); // đổ lại bảng
            XDialog.alert(this, "Cập nhật nhân viên thành công!");
        } catch (Exception e) {
            XDialog.alert(this, "Cập nhật nhân viên thất bại!");
            e.printStackTrace();
        }

    }

    private void delete() {
        if (!XAuth.isManager()) {
            XDialog.alert(this, "Chỉ trưởng phòng mới được phép xóa nhân viên!");
        } else {
            String manv = txtMaNV.getText();
            if (manv.equals(XAuth.user.getMaNV())) {
                XDialog.alert(this, "Bạn không được phép xóa chính mình!");
            } else if (XDialog.confirm(this, "Bạn có thực sự muốn xóa nhân viên này không?")) {
                try {
                    nvDao.delete(manv);
                    this.fillTable();
                    this.clearForm();
                    XDialog.alert(this, "Xóa nhân viên thành công!");
                } catch (Exception e) {
                    XDialog.alert(this, "Xóa nhân viên thất bại!");
                    e.printStackTrace();
                }
            }
        }
    }

    private NhanVien getForm() {

        try {
            maHoaMaNV();
        } catch (Exception ex) {

        }
        NhanVien nv = new NhanVien();
        nv.setMaNV(txtMaNV.getText());
        nv.setTenNV(txtTenNV.getText());
        nv.setSoDT(txtSDT.getText());
        nv.setMatKhau(new String(txtPass.getPassword()));
        nv.setNgayVaoLam(jdcNgayVaoLam.getDate());
        nv.setGhiChu(txtGhiChu.getText());
        boolean GioiTinh;
        if (rdoNam.isSelected()) {
            GioiTinh = true;
        } else {
            GioiTinh = false;
        }
        nv.setGioiTinh(GioiTinh);
        String ChucVu = null;
        int vaiTroIndex = cboVaiTro.getSelectedIndex();
        if (vaiTroIndex == 1) {
            ChucVu = "Quản Lý"; // Quản lý
        } else if (vaiTroIndex == 2) {
            ChucVu = "Thu Ngân"; // Thu ngân
        } else {
            ChucVu = "Nhân Viên"; // Hoặc giá trị mặc định khác nếu cần
        }
        nv.setChuVu(ChucVu);

        boolean TrangThai;
        int trangThaiIndex = cboTrangThai.getSelectedIndex();
        if (trangThaiIndex == 1) {
            TrangThai = true; // Đang làm
        } else if (trangThaiIndex == 2) {
            TrangThai = false; // Nghỉ làm
        } else {
            TrangThai = false; // Hoặc giá trị mặc định khác nếu cần
        }
        nv.setTrangThai(TrangThai);
        nv.setHinh(lblHinh.getToolTipText());
        ma = txtMaNV.getText();
        getMaNV(maHoa);
        getMaNV2(txtMaNV.getText());
        nv.setMaHoa(maHoa);

        return nv;
    }

    private void setForm(NhanVien nv) {
        txtMaNV.setText(nv.getMaNV());
        txtTenNV.setText(nv.getTenNV());
        if (nv.getChuVu() != null) {
            if (nv.getChuVu().equalsIgnoreCase("Quản Lý")) {
                cboVaiTro.setSelectedIndex(1); // Quản lý
            } else if (nv.getChuVu().equalsIgnoreCase("Thu Ngân")) {
                cboVaiTro.setSelectedIndex(2); // Thu ngân
            } else {
                cboVaiTro.setSelectedIndex(3);
            }
        } else {
            cboVaiTro.setSelectedIndex(0);
        }
        if (nv.isTrangThai()) {
            cboTrangThai.setSelectedIndex(1); // Đang làm
        } else {
            cboTrangThai.setSelectedIndex(2); // Nghỉ làm
        }
        txtPass.setText(nv.getMatKhau());
        if (nv.isGioiTinh() == true) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        jdcNgayVaoLam.setDate(nv.getNgayVaoLam());
        txtSDT.setText(nv.getSoDT());
        txtGhiChu.setText(nv.getGhiChu());
        lblHinh.setIcon(XImage.read("NoImage.png"));
        if (nv.getHinh() != null && !nv.getHinh().equals("")) {
            lblHinh.setToolTipText(nv.getHinh());
            try {
                ImageIcon imgIcon = new ImageIcon(getClass().getResource("/com/image/" + nv.getHinh().toString()));
                Image img = imgIcon.getImage();
                lblHinh.setIcon(new ImageIcon(img.getScaledInstance(lblHinh.getWidth(), lblHinh.getHeight(), 0)));
            } catch (Exception e) {
            }
        }
    }

    private void edit() {
        String manv = (String) tblNhanVien.getValueAt(this.row, 0);
        NhanVien nv = nvDao.selectById(manv);
        this.setForm(nv);
        this.updateStatus();
    }

    private void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblNhanVien.getRowCount() - 1);
        // Trạng thái form
        txtMaNV.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);

        // Trạng thái điều hướng
    }

    private void clearForm() {
        NhanVien nv = new NhanVien();
        this.setForm(nv);
        this.row = -1;
        this.updateStatus();
        cboTrangThai.setSelectedIndex(0);
        cboVaiTro.setSelectedIndex(0);
        btngGioiTinh.clearSelection();
        txtRePass.setText("");
    }

    private String hidePass(String pass) {
        String hide = "";
        for (int i = 0; i < pass.length(); i++) {
            hide += "*";
        }
        return hide;
    }

    private void search(String keyword) {
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);
        try {
            NhanVien nv = new NhanVien();
            // String keyword = txtFindTen.getText();
            System.out.println("Key: " + keyword);
            List<NhanVien> list = nvDao.selectByKeyword(keyword);
            for (NhanVien nv1 : list) {
                Object[] row = {
                    nv1.getMaNV(),
                    nv1.getTenNV(),
                    nv1.getChuVu(),
                    hidePass(nv1.getMatKhau())
                };

                model.addRow(row);
            }
        } catch (Exception e) {
            XDialog.alert(this, "Lỗi truy vấn dữ liệu nhân viên!");
            e.printStackTrace();
        }

        // Không cần fillTable() ở đây.
        this.clearForm();
        this.row = -1;
        this.updateStatus();
    }

    private void Loc() {
        boolean key1;
        String key2 = (String) cboFindVaiTro.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        NhanVien nv = new NhanVien();
        model.setRowCount(0);
        if (cboVaiTro.getSelectedIndex() == 0 && cboFindTrangThai.getSelectedIndex() == 0) {
            fillTable();
        }
        if (cboFindVaiTro.getSelectedIndex() != 0 && cboFindTrangThai.getSelectedIndex() == 0) {
            String keyword = String.valueOf(cboFindVaiTro.getSelectedItem());
            search(keyword);
            // Không cần fillTable() ở đây.
        }
        if (cboFindVaiTro.getSelectedIndex() == 0 && cboFindTrangThai.getSelectedIndex() != 0) {
            try {
                if (cboFindTrangThai.getSelectedIndex() == 1) {
                    key1 = true;
                } else {
                    key1 = false;
                }

                List<NhanVien> list = nvDao.selectByTrangThai(key1);
                for (NhanVien nv1 : list) {
                    Object[] row = {
                        nv1.getMaNV(),
                        nv1.getTenNV(),
                        nv1.getChuVu(),
                        hidePass(nv1.getMatKhau())
                    };

                    model.addRow(row);
                }
            } catch (Exception e) {
                XDialog.alert(this, "Lỗi truy vấn dữ liệu nhân viên!");
                e.printStackTrace();
            }
        }
        if (cboFindVaiTro.getSelectedIndex() != 0 && cboFindTrangThai.getSelectedIndex() != 0) {
            try {
                if (cboFindTrangThai.getSelectedIndex() == 1) {
                    key1 = true;
                } else {
                    key1 = false;
                }

                List<NhanVien> list = nvDao.selectBy2Keyword(key1, key2);
                for (NhanVien nv1 : list) {
                    Object[] row = {
                        nv1.getMaNV(),
                        nv1.getTenNV(),
                        nv1.getChuVu(),
                        hidePass(nv1.getMatKhau())
                    };

                    model.addRow(row);
                }
            } catch (Exception e) {
                XDialog.alert(this, "Lỗi truy vấn dữ liệu nhân viên!");
                e.printStackTrace();
            }

            // Không cần fillTable() ở đây.
        }
        this.clearForm();
        this.row = -1;
        this.updateStatus();
    }

    private boolean validateForm() {
        int check = 0;
        String pass = new String(txtPass.getPassword());
        String repass = new String(txtRePass.getPassword());
        String maNV = txtMaNV.getText();
        if (maNV.isEmpty()) {
            ErrorMaNV1.setText("Không được trống!");
            check = 1;
        } else {
            ErrorMaNV1.setText("");
        }

        // Kiểm tra tên nhân viên
        String tenNV = txtTenNV.getText();
        if (tenNV.isEmpty()) {
            ErrorTenNV.setText("Không được trống!");
            check = 1;
        } else {
            ErrorTenNV.setText("");
        }
        // Kiểm tra chức vụ
        int vaiTroIndex = cboVaiTro.getSelectedIndex();
        if (vaiTroIndex == 0) {
            ErrorVaiTro.setText("Chưa chọn!");
            check = 1;
        } else {
            ErrorVaiTro.setText("");
        }

        // Kiểm tra trạng thái
        int trangThaiIndex = cboTrangThai.getSelectedIndex();
        if (trangThaiIndex == 0) {
            ErrorTrangThai.setText("Chưa chọn!");
            check = 1;
        } else {
            ErrorTrangThai.setText("");
        }
        // Kiểm tra giới tính
        if (!rdoNam.isSelected() && !rdoNu.isSelected()) {
            ErrorGioiTinh.setText("Hãy chọn giới tính");
            check = 1;
        } else {
            ErrorGioiTinh.setText("");
        }
        // Kiểm tra mật khẩu
        if (tenNV.isEmpty()) {
            ErrorMatKhau.setText("Không được trống!");
            check = 1;
        } else {
            ErrorMatKhau.setText("");
        }
        //kiểm tra khớp mật khẩu
        if (!repass.equals(pass)) {
            System.out.println("" + pass + repass);
            ErrorReMatKhau.setText("Không khớp!");
            check = 1;
        } else {
            ErrorMatKhau.setText("");
            ErrorReMatKhau.setText("");
        }

        // Kiểm tra số điện thoại
        String soDT = txtSDT.getText();
        if (soDT.isEmpty()) {
            ErrorSoDT.setText("Không được trống!");
            check = 1;
        } else {
            ErrorSoDT.setText("");
        }

        // Kiểm tra ngày vào làm
        Date ngayVaoLam = jdcNgayVaoLam.getDate();
        if (ngayVaoLam == null) {
            ErrorNgayVaoLam.setText("Chưa chọn");
            check = 1;
        } else {
            ErrorNgayVaoLam.setText("");
        }

        // Kiểm tra số điện thoại có đúng định dạng hay không
        if (!soDT.matches("^(03|05|07|08|09)\\d{8}$")) {
            ErrorSoDT.setText("Không hợp lệ!");
            check = 1;
        } else {
            ErrorSoDT.setText("");
        }

        // Kiểm tra các điều kiện khác nếu cần
        if (check == 1) {
            return true;
        } else {
            return false;
        }
        // Trả về true nếu tất cả kiểm tra đều hợp lệ
    }

    public void maHoaMaNV() throws Exception {
        KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
        keyGenerator.init(128); // block size is 128bits
        SecretKey secretKey = keyGenerator.generateKey();
        cipher = Cipher.getInstance("AES");
        maHoa = encrypt(inputMaNV, secretKey);
    }

    public static String encrypt(String plainText, SecretKey secretKey)
            throws Exception {
        byte[] plainTextByte = plainText.getBytes();
        cipher.init(Cipher.ENCRYPT_MODE, secretKey);
        byte[] encryptedByte = cipher.doFinal(plainTextByte);
        Base64.Encoder encoder = Base64.getEncoder();
        String encryptedText = encoder.encodeToString(encryptedByte);
        return encryptedText;
    }

    public static String decrypt(String encryptedText, SecretKey secretKey)
            throws Exception {
        Base64.Decoder decoder = Base64.getDecoder();
        byte[] encryptedTextByte = decoder.decode(encryptedText);
        cipher.init(Cipher.DECRYPT_MODE, secretKey);
        byte[] decryptedByte = cipher.doFinal(encryptedTextByte);
        String decryptedText = new String(decryptedByte);
        return decryptedText;
    }

    public String getMaNV(String NV) {
        return inputMaNV = NV;
    }

    public String getMaNV2(String maNV) {
        return ma = maNV;
    }

    public boolean createQR() {
        JDialog dialogQR = new JDialog();
        dialogQR.setSize(220, 280);
        dialogQR.setLayout(new BoxLayout(dialogQR.getContentPane(), BoxLayout.Y_AXIS));
        dialogQR.setLocationRelativeTo(null);
        dialogQR.setTitle("SakuraCoffee - Tạo mã QR");

        JButton buttonQR = new JButton("Lưu QR");
        buttonQR.setAlignmentX(Component.CENTER_ALIGNMENT);

        JLabel jLabelQR = new JLabel();
        jLabelQR.setPreferredSize(new Dimension(200, 200));
        jLabelQR.setAlignmentX(Component.CENTER_ALIGNMENT);

        JPanel topPanel = new JPanel();
        topPanel.setLayout(new BoxLayout(topPanel, BoxLayout.Y_AXIS));
        topPanel.add(Box.createVerticalGlue());
        topPanel.add(jLabelQR);

        // Hàng thứ hai (kích thước 200x30)
        JPanel bottomPanel = new JPanel();
        bottomPanel.setLayout(new BoxLayout(bottomPanel, BoxLayout.Y_AXIS));
        bottomPanel.add(Box.createVerticalGlue());
        bottomPanel.add(buttonQR);

        String data = maHoa;
        QRCodeWriter qrCodeWriter = new QRCodeWriter();
        try {
            BitMatrix matrix = qrCodeWriter.encode(data, BarcodeFormat.QR_CODE, 200, 200);
            BufferedImage image = MatrixToImageWriter.toBufferedImage(matrix);

            // Tạo ImageIcon và đặt nó
            ImageIcon imageIcon = new ImageIcon(image.getScaledInstance(200, 200, Image.SCALE_DEFAULT));
            jLabelQR.setIcon(imageIcon);

            dialogQR.add(topPanel);
            dialogQR.add(bottomPanel);
            dialogQR.setVisible(true);

            buttonQR.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if (jLabelQR.getIcon() != null) {
                        Icon icon = jLabelQR.getIcon();
                        BufferedImage bi = new BufferedImage(
                                icon.getIconWidth(),
                                icon.getIconHeight(),
                                BufferedImage.TYPE_INT_RGB);
                        Graphics g = bi.createGraphics();
                        icon.paintIcon(null, g, 0, 0);
                        g.setColor(Color.WHITE);
                        g.drawString("", 10, 20);
                        g.dispose();
                        JFileChooser filePane = new JFileChooser("D:\\");
                        filePane.setDialogTitle("select folder");
                        filePane.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                        filePane.setAcceptAllFileFilterUsed(false);
                        int ketQua = filePane.showSaveDialog(null);
                        if (ketQua == JFileChooser.APPROVE_OPTION) {
                            String outputDir = filePane.getSelectedFile().getPath();
                            try {
                                ImageIO.write(bi, "png", new File(outputDir + ma + ".png"));
                            } catch (IOException ex) {
                                ex.printStackTrace();

                            }

                        }
                        dialogQR.dispose();
                        if (tblNhanVien.getSelectedRow() == 0) {
                            XDialog.alert(null, "Thêm nhân viên mới thành công!");
                        } else {

                            XDialog.alert(null, "Tạo QR thành công");
                        }

                    }
                }
            });
        } catch (Exception ex) {

            ex.printStackTrace();

        }
        return false;
    }

    public String layma() {
        List<NhanVien> nhanViens = nvDao.selectAll();
        for (NhanVien nhanVien : nhanViens) {
            if (maNV.equals(nhanVien.getMaNV())) {
                maHoa = nhanVien.getMaHoa();
            }
        }
        return inputMaNV;
    }

    public void updateMaHoa(String maHoa, String nhanVien) {
        nvDao.updateMaHoa(maHoa, nhanVien);
    }
}
